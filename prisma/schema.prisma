model NivelInvestigador {
  id                String      @id @default(cuid())
  codigo            String      @unique @map("codigo")
  nombre            String      @map("nombre")
  descripcion       String      @map("descripcion")
  puntajeMinimo     Int         @map("puntaje_minimo")
  puntajeMaximo     Int         @map("puntaje_maximo")
  color             String      @map("color")
  icono             String?     @map("icono")
  orden             Int         @map("orden")
  activo            Boolean     @default(true) @map("activo")
  requisitos        Json?       @map("requisitos")
  beneficios        Json?       @map("beneficios")
  createdAt         DateTime    @default(now()) @map("created_at")
  updatedAt         DateTime    @updatedAt      @map("updated_at")
  investigadores    Profile[]
  evaluaciones      Evaluacion[]

  /// Niveles válidos para 'codigo' y 'nombre':
  /// - CANDIDATO: Candidato a Investigador Estatal
  /// - NIVEL_I: Investigador Estatal Nivel I
  /// - NIVEL_II: Investigador Estatal Nivel II
  /// - NIVEL_III: Investigador Estatal Nivel III
  /// - EXCEPCIONAL: Investigador Excepcional
  /// - INSIGNE: Investigador Insigne
  ///
  /// Descripciones:
  /// - Investigador: Persona que realiza actividades sistemáticas para generar conocimiento nuevo o aplicar conocimientos existentes en beneficio de la sociedad.
  /// - Candidato a Investigador Estatal: Personas con nivel mínimo de licenciatura que realizan actividades de producción científica, divulgación y promoción científica, adscritos a instituciones académicas o tecnológicas.
  /// - Investigador Estatal Nivel I: Profesionales con grado de maestría o estudiantes de doctorado que colaboran en proyectos de investigación, desarrollo tecnológico y/o innovación.
  /// - Investigador Estatal Nivel II: Investigadores con grado de doctorado hayan liderado proyectos científicos o tecnológicos con impacto en el estado y que sean miembros del SNII.
  /// - Investigador Estatal Nivel III: Miembros del Sistema Nacional de Investigadores (SNI) en el nivel II, con alto impacto en el estado.
  /// - Investigador Excepcional: Miembros del SNI en los niveles III o Emérito, reconocidos por su trayectoria científica y tecnológica como referentes estatales en su área de conocimiento, con más de 10 años de experiencia en el proceso ID+i.
  /// - Investigador Insigne: Distinción otorgada a aquellos investigadores que han alcanzado el más alto nivel de reconocimiento en su trayectoria científica, tecnológica y académica, con un impacto significativo en su área de conocimiento y en la sociedad.

  @@map("niveles_investigador")
}
model Evaluacion {
  id                    String              @id @default(cuid())
  investigadorId        String              @map("investigador_id")
  evaluadorId           String              @map("evaluador_id")
  evaluadorNombre       String              @map("evaluador_nombre")
  nivelPropuestoId      String              @map("nivel_propuesto_id")
  ciclo                 String              @map("ciclo")
  puntajePublicaciones  Int                 @default(0) @map("puntaje_publicaciones")
  puntajeProyectos      Int                 @default(0) @map("puntaje_proyectos")
  puntajeFormacion      Int                 @default(0) @map("puntaje_formacion")
  puntajeExperiencia    Int                 @default(0) @map("puntaje_experiencia")
  puntajeImpacto        Int                 @default(0) @map("puntaje_impacto")
  puntajeTotal          Int                 @default(0) @map("puntaje_total")
  detallePublicaciones  Json?               @map("detalle_publicaciones")
  detalleProyectos      Json?               @map("detalle_proyectos")
  detalleFormacion      Json?               @map("detalle_formacion")
  detalleExperiencia    Json?               @map("detalle_experiencia")
  detalleImpacto        Json?               @map("detalle_impacto")
  observaciones         String?             @map("observaciones")
  fortalezas            String?             @map("fortalezas")
  areasMejora           String?             @map("areas_mejora")
  documentosSoporte     Json?               @map("documentos_soporte")
  estado                String              @default("EN_REVISION") @map("estado")
  aprobadoPor           String?             @map("aprobado_por")
  fechaAprobacion       DateTime?           @map("fecha_aprobacion")
  fechaInicio           DateTime            @default(now()) @map("fecha_inicio")
  fechaFinalizacion     DateTime?           @map("fecha_finalizacion")
  investigador          Profile             @relation(fields: [investigadorId], references: [id])
  nivelPropuesto        NivelInvestigador   @relation(fields: [nivelPropuestoId], references: [id])
  createdAt             DateTime            @default(now()) @map("created_at")
  updatedAt             DateTime            @updatedAt      @map("updated_at")
}

model MetricaInvestigador {
  id String @id @default(cuid())
  investigadorId String @unique @map("investigador_id")
  investigador Profile @relation(fields: [investigadorId], references: [id])

  publicaciones        Int      @default(0) @map("publicaciones")
  articulos            Int      @default(0) @map("articulos")
  libros               Int      @default(0) @map("libros")
  capitulosLibro       Int      @default(0) @map("capitulos_libro")
  ponencias            Int      @default(0) @map("ponencias")
  patentes             Int      @default(0) @map("patentes")
  proyectos            Int      @default(0) @map("proyectos")
  tesisDirigidas       Int      @default(0) @map("tesis_dirigidas")
  premios              Int      @default(0) @map("premios")
  estancias            Int      @default(0) @map("estancias")
  colaboraciones       Int      @default(0) @map("colaboraciones")
  evaluacionesRecibidas Int     @default(0) @map("evaluaciones_recibidas")
  evaluacionesRealizadas Int    @default(0) @map("evaluaciones_realizadas")
  indiceH              Float?   @map("indice_h")
  indiceG              Float?   @map("indice_g")
  citasTotales         Int      @default(0) @map("citas_totales")
  impactoSocial        String?  @map("impacto_social")
  fechaUltimaActualizacion DateTime @default(now()) @map("fecha_ultima_actualizacion")
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt      @map("updated_at")
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  password   String
  roleId     String
  lastActive DateTime? @default(now())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  profile    Profile?
  role       Role      @relation(fields: [roleId], references: [id])

  @@map("users")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]

  @@map("roles")
}

model Profile {
  id                  String       @id @default(cuid())
  userId              String?      @unique         @map("user_id")
  clerkUserId         String?      @unique         @map("clerk_user_id")
  slug                String?      @unique         @map("slug")
  nombreCompleto      String                        @map("nombre_completo")
  nombres             String?                       @map("nombres")
  apellidos           String?                       @map("apellidos")
  curp                String?      @unique         @map("curp")
  rfc                 String?                       @map("rfc")
  noCvu               String?                       @map("no_cvu")
  correo              String?                       @map("correo")
  telefono            String?                       @map("telefono")
  fotografiaUrl       String?                       @map("fotografia_url")
  nacionalidad        String?      @default("Mexicana") @map("nacionalidad")
  fechaNacimiento     DateTime?                    @map("fecha_nacimiento")
  estadoNacimiento    String?                       @map("estado_nacimiento")
  entidadFederativa   String?                       @map("entidad_federativa")
  institucionId       String?                       @map("institucion_id")
  institucion         String?                       @map("institucion")
  departamento        String?                       @map("departamento")
  ubicacion           String?                       @map("ubicacion")
  sitioWeb            String?                       @map("sitio_web")
  origen              String?                       @map("origen")
  archivoProcesado    String?                       @map("archivo_procesado")
  fechaRegistro       DateTime?   @default(now())  @map("fecha_registro")
  isAdmin             Boolean?    @default(false)  @map("es_admin")
  activo              Boolean?    @default(true)   @map("activo")

  // Académico y profesional
  ultimoGradoEstudios String?                       @map("ultimo_grado_estudios")
  gradoMaximoEstudios String?                       @map("grado_maximo_estudios")
  empleoActual        String?                       @map("empleo_actual")
  lineaInvestigacion  String?                       @map("linea_investigacion")
  areaInvestigacion   String?                       @map("area_investigacion")
  disciplina          String?                       @map("disciplina")
  especialidad        String?                       @map("especialidad")
  orcid               String?                       @map("orcid")
  nivel               String?                       @map("nivel")
  nivelActualId       String?                       @map("nivel_actual_id")
  fechaAsignacionNivel DateTime?                    @map("fecha_asignacion_nivel")
  puntajeTotal        Int?         @default(0)      @map("puntaje_total")
  estadoEvaluacion    String?      @default("PENDIENTE") @map("estado_evaluacion")

  // Producción y experiencia
  articulos                   String? @map("articulos")
  libros                      String? @map("libros")
  capitulosLibros             String? @map("capitulos_libros")
  proyectosInvestigacion      String? @map("proyectos_investigacion")
  proyectosVinculacion        String? @map("proyectos_vinculacion")
  experienciaDocente          String? @map("experiencia_docente")
  experienciaLaboral          String? @map("experiencia_laboral")
  premiosDistinciones         String? @map("premios_distinciones")
  idiomas                     String? @map("idiomas")
  colaboracionInternacional   String? @map("colaboracion_internacional")
  colaboracionNacional        String? @map("colaboracion_nacional")
  sni                         String? @map("sni")
  anioSni                     Int?    @map("anio_sni")
  cvUrl                       String? @map("cv_url")

  institucionRel      Institution? @relation(fields: [institucionId], references: [id])
  user                User?        @relation(fields: [userId], references: [id], onDelete: Cascade)
  nivelActual         NivelInvestigador? @relation(fields: [nivelActualId], references: [id])
  evaluaciones        Evaluacion[]
  certificados        Certificado[]
  metricas            MetricaInvestigador?
  postulaciones       Postulacion[]
  createdAt           DateTime     @default(now()) @map("created_at")
  updatedAt           DateTime     @updatedAt      @map("updated_at")

  tipoPerfil           String?   @default("INVESTIGADOR") @map("tipo_perfil") // "INVESTIGADOR" o "TECNOLOGO"
  nivelTecnologoId     String?   @map("nivel_tecnologo_id")
  nivelTecnologo       NivelTecnologo? @relation(fields: [nivelTecnologoId], references: [id])

  @@map("investigadores")
}

model NivelTecnologo {
  id          String   @id @default(cuid())
  codigo      String   @unique @map("codigo") // "A" o "B"
  nombre      String   @map("nombre")
  descripcion String   @map("descripcion")
  perfiles    Profile[]

  /// Niveles válidos:
  /// - A: Tecnólogo Nivel A
  ///   Estudiantes o egresados recientes de licenciaturas en áreas de humanidades, ciencias, tecnología e innovación, con experiencia en proyectos iniciales de desarrollo tecnológico, adscritos a empresas, instituciones académicas o centros de investigación.
  /// - B: Tecnólogo Nivel B
  ///   Profesionales con experiencia comprobable en el desarrollo tecnológico o la innovación en las áreas de humanidades, ciencias, tecnología e innovación, adscritos a empresas, instituciones de educación superior, centros de investigación, o entidades equivalentes. Incluye a quienes cuenten con títulos de propiedad industrial otorgados por el IMPI.

  @@map("niveles_tecnologo")
}

model Institution {
  id        String    @id @default(cuid())
  nombre    String
  tipo      String?
  ubicacion String?
  sitioWeb  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  profiles  Profile[]

  @@map("institutions")
}

model Certificado {
  id                    String              @id @default(cuid())
  folio                 String              @unique // SEI-2025-000123
  investigadorId        String
  nivelId               String?             // Nivel al momento de emisión

  // Datos del certificado (snapshot)
  nombreCompleto        String

  curp                  String
  nivel                 String
  nivelDescripcion      String?

  // Fechas
  fechaEmision          DateTime            @default(now())
  fechaVigenciaInicio   DateTime
  fechaVigenciaFin      DateTime

  // Archivos generados
  pdfUrl                String?             // URL del PDF en Cloudinary
  qrCodeUrl             String?             // URL del QR code

  // Verificación
  codigoVerificacion    String              @unique // Hash SHA-256
  verificado            Boolean             @default(false)
  vecesVerificado       Int                 @default(0)
  ultimaVerificacion    DateTime?

  // Estado
  estado                String              @default("ACTIVO")
  // Estados: ACTIVO, REVOCADO, EXPIRADO, SUSPENDIDO
  motivoRevocacion      String?
  fechaRevocacion       DateTime?
  revocadoPor           String?             // ClerkID

  // Firma digital
  firmadoPor            String?             // Nombre del funcionario
  cargoFirmante         String?
  firmaDigital          String?             // Hash de la firma

  // Metadata
  plantillaUsada        String?             // ID de plantilla
  metadataAdicional     Json?               // Información adicional

  investigador          Profile             @relation(fields: [investigadorId], references: [id])
  verificaciones        VerificacionCertificado[]

  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt

  @@index([investigadorId])
  @@index([folio])
  @@index([estado])
  @@index([codigoVerificacion])
  @@map("certificados")
}

model VerificacionCertificado {
  id                String      @id @default(cuid())
  certificadoId     String
  folio             String
  ipAddress         String?
  userAgent         String?
  pais              String?
  ciudad            String?
  exitosa           Boolean     @default(true)
  motivoFallo       String?
  fechaVerificacion DateTime    @default(now())

  certificado       Certificado @relation(fields: [certificadoId], references: [id])

  @@index([certificadoId])
  @@index([fechaVerificacion])
  @@map("verificaciones_certificado")
}

  model PlantillaCertificado {
    id              String   @id @default(cuid())
    nombre          String
    descripcion     String?
    htmlTemplate    String   @db.Text // HTML del certificado
    cssStyles       String?  @db.Text // Estilos CSS
    variables       Json?    // Variables disponibles {nombre, placeholder, tipo}
  
    // Configuración
    orientacion     String   @default("portrait") // portrait, landscape
    tamano          String   @default("letter")   // letter, a4
    margenes        Json?    // {top, right, bottom, left}
  
    // Estado
    activa          Boolean  @default(false)
    version         Int      @default(1)
  
    // Metadata
    creadaPor       String?
    ultimaEdicion   String?
  
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
  
    @@map("plantillas_certificado")
  }

  // ========================================
  // MÓDULO 3: CONVOCATORIAS
  // ========================================

  model Convocatoria {
    id                    String              @id @default(cuid())
    folio                 String              @unique // CONV-2025-001
    titulo                String
    descripcion           String              @db.Text
    objetivos             String              @db.Text
    alcance               String?             @db.Text
  
    // Organización
    organizacion          String
    dependencia           String?
    contacto              String?
    email                 String?
    telefono              String?
    sitioWeb              String?
  
    // Categoría y tipo
    categoria             String              // INVESTIGACION, DESARROLLO, INNOVACION, FORMACION
    tipo                  String              // PROYECTO, BECA, ESTANCIA, PREMIO
    modalidad             String?             // INDIVIDUAL, GRUPAL, INSTITUCIONAL
  
    // Fechas importantes
    fechaPublicacion      DateTime
    fechaAperturaConv     DateTime
    fechaCierreConv       DateTime
    fechaEvaluacion       DateTime?
    fechaResultados       DateTime?
    fechaInicioProyecto   DateTime?
    fechaFinProyecto      DateTime?
  
    // Financiamiento
    presupuestoTotal      Float?
    montoMinimo           Float?
    montoMaximo           Float?
    numeroPlazas          Int?
    plazasDisponibles     Int?
  
    // Elegibilidad
    nivelMinimo           String?             // Nivel mínimo requerido
    nivelMaximo           String?
    areasElegibles        Json?               // Array de áreas de investigación
    institucionesElegibles Json?              // Array de instituciones
    edadMinima            Int?
    edadMaxima            Int?
  
    // Requisitos
    requisitos            Json?               // Array de requisitos textuales
    documentosRequeridos  Json?               // Array de {nombre, descripcion, obligatorio}
    restricciones         Json?               // Restricciones adicionales
  
    // Criterios de evaluación
    criteriosEvaluacion   Json?               // Array de criterios con pesos
    puntajeMinimo         Float?
  
    // Archivos oficiales
    basesPdf              String?             // URL del PDF de bases
    formatosPdf           String?             // URL de formatos descargables
    ejemplosPdf           String?
  
    // Estado
    estado                String              @default("BORRADOR") 
    // Estados: BORRADOR, PUBLICADA, ABIERTA, CERRADA, EN_EVALUACION, RESULTADOS_PUBLICADOS, FINALIZADA, CANCELADA
  
    // Configuración
    permitePostulacion    Boolean             @default(true)
    requiereEvaluacion    Boolean             @default(true)
    esPublica             Boolean             @default(true)
    permiteEdicionPostulacion Boolean         @default(true)
    requiereCartaPostulacion Boolean          @default(true)
  
    // Notificaciones automáticas
    notificarApertura     Boolean             @default(true)
    notificarCierre       Boolean             @default(true)
    notificarResultados   Boolean             @default(true)
    diasAntesNotificacion Int                 @default(3)
  
    // Metadata
    creadaPor             String?             // ClerkID
    modificadaPor         String?
    cicloId               String?
  
    postulaciones         Postulacion[]
  
    createdAt             DateTime            @default(now())
    updatedAt             DateTime            @updatedAt
  
    @@index([estado])
    @@index([fechaCierreConv])
    @@index([categoria])
    @@map("convocatorias")
  }

  model Postulacion {
    id                    String              @id @default(cuid())
    convocatoriaId        String
    investigadorId        String
    folio                 String              @unique // POST-2025-000123
  
    // Información del proyecto (si aplica)
    tituloProyecto        String?
    resumen               String?             @db.Text
    objetivoGeneral       String?             @db.Text
    objetivosEspecificos  String?             @db.Text
    justificacion         String?             @db.Text
    metodologia           String?             @db.Text
    resultadosEsperados   String?             @db.Text
    impactoEsperado       String?             @db.Text
    cronograma            Json?               // Array de actividades con fechas
  
    // Financiamiento
    presupuestoSolicitado Float?
    desglosepresupuesto   Json?               // Array de {concepto, monto, justificacion}
    cofinanciamiento      Float?
    fuenteCofinanciamiento String?
  
    // Documentos requeridos
    documentos            Json?               // Array de {tipo, nombre, url, fechaSubida}
    cartaPostulacion      String?
    curriculumVitae       String?
    cartaApoyo            String?
  
    // Colaboradores (si es grupal)
    colaboradores         Json?               // Array de colaboradores
  
    // Evaluación
    puntajeTotal          Float?
    dictamen              String?             // APROBADO, APROBADO_CONDICIONADO, RECHAZADO
    observaciones         String?             @db.Text
    recomendaciones       String?             @db.Text
    posicionFinal         Int?                // Posición en ranking
  
    // Estado
    estado                String              @default("BORRADOR")
    // Estados: BORRADOR, ENVIADA, RECIBIDA, EN_REVISION, DOCUMENTACION_INCOMPLETA, 
    //          EN_EVALUACION, EVALUADA, APROBADA, RECHAZADA, LISTA_ESPERA
  
    // Notificaciones
    notificado            Boolean             @default(false)
    fechaNotificacion     DateTime?
  
    // Fechas
    fechaPostulacion      DateTime?
    fechaEnvio            DateTime?
    fechaRecepcion        DateTime?
    fechaEvaluacion       DateTime?
    fechaResultado        DateTime?
  
    // Versiones (para control de cambios)
    version               Int                 @default(1)
    versionAnterior       String?             // ID de versión anterior
  
    convocatoria          Convocatoria        @relation(fields: [convocatoriaId], references: [id])
    investigador          Profile             @relation(fields: [investigadorId], references: [id])
    evaluaciones          EvaluacionPostulacion[]
  
    createdAt             DateTime            @default(now())
    updatedAt             DateTime            @updatedAt
  
    @@index([convocatoriaId])
    @@index([investigadorId])
    @@index([estado])
    @@index([folio])
    @@map("postulaciones")
  }

  model EvaluacionPostulacion {
    id                    String      @id @default(cuid())
    postulacionId         String
    evaluadorId           String      // ClerkID del evaluador
    evaluadorNombre       String
    evaluadorEspecialidad String?
  
    // Criterios de evaluación (configurables según convocatoria)
    criterios             Json        // Array de {criterio, descripcion, puntaje, puntajeMaximo, comentario}
    puntajeTotal          Float
    puntajeMaximoTotal    Float
    porcentaje            Float       // Porcentaje sobre puntaje máximo
  
    // Dictamen detallado
    recomendacion         String      // APROBAR, APROBAR_CONDICIONADO, RECHAZAR, REVISION_ADICIONAL
    comentariosGenerales  String?     @db.Text
    fortalezas            String?     @db.Text
    debilidades           String?     @db.Text
    recomendacionesMejora String?     @db.Text
  
    // Aspectos específicos
    calidadCientifica     Int?        // 1-10
    viabilidad            Int?        // 1-10
    impacto               Int?        // 1-10
    presupuesto           Int?        // 1-10
  
    // Estado
    estado                String      @default("PENDIENTE")
    // Estados: ASIGNADA, EN_PROCESO, COMPLETADA, REVISADA, APROBADA
  
    // Conflicto de interés
    conflictoInteres      Boolean     @default(false)
    motivoConflicto       String?
  
    // Fechas
    fechaAsignacion       DateTime    @default(now())
    fechaInicio           DateTime?
    fechaCompletada       DateTime?
    fechaAprobada         DateTime?
  
    // Auditoría
    aprobadaPor           String?     // ClerkID del supervisor
    revisadaPor           String?
  
    postulacion           Postulacion @relation(fields: [postulacionId], references: [id])
  
    createdAt             DateTime    @default(now())
    updatedAt             DateTime    @updatedAt
  
    @@index([postulacionId])
    @@index([evaluadorId])
    @@index([estado])
    @@map("evaluaciones_postulacion")
  }

  model CicloConvocatoria {
    id                String      @id @default(cuid())
    nombre            String      @unique // "2025-1", "2025-2"
    anio              Int
    periodo           String      // "Primer Semestre", "Segundo Semestre", "Anual"
    fechaInicio       DateTime
    fechaFin          DateTime
    activo            Boolean     @default(true)
  
    descripcion       String?
    presupuestoTotal  Float?
    metasProyectos    Int?
  
    // Estadísticas
    totalConvocatorias Int        @default(0)
    totalPostulaciones Int        @default(0)
    totalAprobadas     Int        @default(0)
  
    createdAt         DateTime    @default(now())
    updatedAt         DateTime    @updatedAt
  
    @@map("ciclos_convocatoria")
  }

  model NotificacionConvocatoria {
    id                String      @id @default(cuid())
    convocatoriaId    String?
    tipo              String      // NUEVA, APERTURA, PROXIMO_CIERRE, CERRADA, RESULTADOS, RECORDATORIO
    asunto            String
    mensaje           String      @db.Text
    destinatarios     Json        // Array de IDs de investigadores o "TODOS"
  
    // Filtros de destinatarios
    filtroNivel       String?     // Solo investigadores de X nivel
    filtroArea        String?     // Solo de X área
  
    // Estado de envío
    programada        Boolean     @default(false)
    fechaProgramada   DateTime?
    enviada           Boolean     @default(false)
    fechaEnvio        DateTime?
    totalDestinatarios Int        @default(0)
    totalEnviados     Int         @default(0)
    totalFallidos     Int         @default(0)
  
    // Logs
    logEnvio          Json?       // Detalle del envío
    errores           Json?       // Array de errores si los hubo
  
    createdAt         DateTime    @default(now())
    updatedAt         DateTime    @updatedAt
  
    @@index([convocatoriaId])
    @@index([enviada])
    @@map("notificaciones_convocatoria")
  }

  // ========================================
  // ÍNDICES ADICIONALES PARA OPTIMIZACIÓN
  // ========================================

  // Los índices ya están definidos en cada modelo con @@index
  // Esto mejora el rendimiento de queries frecuentes

