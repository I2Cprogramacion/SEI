#!/usr/bin/env node

/**
 * Script de diagn√≥stico para reCAPTCHA v2 Cl√°sico
 * Verifica que la configuraci√≥n sea correcta
 */

console.log("üîç Diagn√≥stico de reCAPTCHA v2 Cl√°sico\n");

// Verificar variables de entorno
const siteKey = process.env.NEXT_PUBLIC_RECAPTCHA_SITE;
const secretKey = process.env.RECAPTCHA_SECRET;

console.log("üìã Variables de entorno:");
console.log(`NEXT_PUBLIC_RECAPTCHA_SITE: ${siteKey ? "‚úÖ Configurada" : "‚ùå NO configurada"}`);
console.log(`RECAPTCHA_SECRET: ${secretKey ? "‚úÖ Configurada" : "‚ùå NO configurada"}\n`);

if (!siteKey || !secretKey) {
  console.error("‚ùå ERROR: Faltan variables de entorno");
  console.log("\nüìù Agrega a .env.local:");
  console.log("NEXT_PUBLIC_RECAPTCHA_SITE=tu_site_key");
  console.log("RECAPTCHA_SECRET=tu_secret_key\n");
  process.exit(1);
}

// Verificar formato de las claves
console.log("üîë Verificaci√≥n de claves:");

const isTestKey = siteKey === "6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI";
if (isTestKey) {
  console.log("‚ö†Ô∏è  Usando claves de PRUEBA de Google");
  console.log("   Estas claves siempre pasan el CAPTCHA");
  console.log("   NO usar en producci√≥n\n");
} else {
  if (siteKey.startsWith("6L")) {
    console.log("‚úÖ Site Key tiene formato v√°lido (empieza con 6L)");
  } else {
    console.log("‚ö†Ô∏è  Site Key NO empieza con 6L (puede ser Enterprise o inv√°lida)");
  }

  if (secretKey.startsWith("6L")) {
    console.log("‚úÖ Secret Key tiene formato v√°lido (empieza con 6L)");
  } else {
    console.log("‚ö†Ô∏è  Secret Key NO empieza con 6L (puede ser Enterprise o inv√°lida)");
  }
}

console.log("\nüåê Endpoints correctos:");
console.log("‚úÖ Frontend usa: react-google-recaptcha");
console.log("‚úÖ Backend usa: https://www.google.com/recaptcha/api/siteverify");

console.log("\nüìä Panel de verificaci√≥n:");
console.log("‚úÖ Cl√°sico: https://www.google.com/recaptcha/admin");
console.log("‚ùå NO uses: https://console.cloud.google.com (Enterprise)");

console.log("\nüß™ Prueba de verificaci√≥n simulada:");
console.log("Simulando verificaci√≥n con Google...\n");

// Simular llamada a siteverify (solo para verificar que el endpoint es alcanzable)
const testToken = "test-token-invalid";

fetch("https://www.google.com/recaptcha/api/siteverify", {
  method: "POST",
  headers: {
    "Content-Type": "application/x-www-form-urlencoded",
  },
  body: `secret=${secretKey}&response=${testToken}`,
})
  .then((res) => res.json())
  .then((data) => {
    console.log("üì° Respuesta de Google:");
    console.log(JSON.stringify(data, null, 2));

    if (data["error-codes"]) {
      console.log("\n‚ö†Ô∏è  Error codes detectados:");
      data["error-codes"].forEach((code) => {
        switch (code) {
          case "missing-input-secret":
            console.log("   - Secret key falta");
            break;
          case "invalid-input-secret":
            console.log("   - Secret key INV√ÅLIDA (verifica que sea de v2 cl√°sico)");
            break;
          case "invalid-input-response":
            console.log("   - Token de prueba inv√°lido (esto es ESPERADO)");
            break;
          case "timeout-or-duplicate":
            console.log("   - Token expirado o duplicado");
            break;
          default:
            console.log(`   - ${code}`);
        }
      });
    }

    console.log("\n‚úÖ Verificaci√≥n completada");
    console.log("\nüìù Pr√≥ximos pasos:");
    console.log("1. Si 'invalid-input-secret' ‚Üí Verifica tus claves en .env.local");
    console.log("2. Aseg√∫rate de tener las claves del panel CL√ÅSICO (no Enterprise)");
    console.log("3. Agrega sei-chih.com.mx y localhost a dominios permitidos");
    console.log("4. Prueba en el navegador completando el CAPTCHA");
  })
  .catch((error) => {
    console.error("‚ùå Error al conectar con Google:", error.message);
    console.log("\nüîß Posibles causas:");
    console.log("- Sin conexi√≥n a internet");
    console.log("- Firewall bloqueando la conexi√≥n");
    console.log("- URL incorrecta (verifica que sea siteverify, no Enterprise)");
  });
